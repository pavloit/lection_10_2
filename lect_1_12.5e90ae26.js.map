{"mappings":"AAAA,MAAMA,EAAW,CACbC,KAAMC,SAASC,cAAc,cAC7BC,cAAeF,SAASC,cAAc,sBACtCE,KAAMH,SAASC,cAAc,YAC7BG,SAAUJ,SAASC,cAAc,WACjCI,YAAaL,SAASC,cAAc,eAG9BD,SAASC,cAAc,WAEjCH,EAASM,SAASE,iBAAiB,SAGnC,WACIR,EAASI,cAAcK,mBAAmB,YACtC,uC,IAJRT,EAASO,YAAYC,iBAAiB,SAOtC,WACI,IAAIE,SAAEA,EAAQC,iBAAEA,GAAqBX,EAASI,cAC9C,GAAwB,IAApBM,EAASE,OACT,OAEJD,EAAiBE,Q,IAGrBb,EAASC,KAAKO,iBAAiB,UAE/BM,eAA6BC,GACzBA,EAAIC,iBACJ,MACMC,EADW,IAAIC,SAASH,EAAII,eACPC,OAAO,WAC5BC,QAOVP,eAAmCQ,GAC/B,MAAMC,EAAYD,EAAIE,KAAIV,MAAMW,IAC5B,MAAMC,QAAaC,MAAM,uCAAuCF,KAChE,IAAKC,EAAKE,GACN,MAAM,IAAIC,MAAMH,EAAKI,YAGzB,OAAOJ,EAAKK,MAAM,IAItB,aADmBC,QAAQC,WAAWV,IAEjCW,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBX,KAAI,EAACY,MAAEA,KAAYA,EAAM,GAAGC,QAAQ,I,CApBlBC,CAAoBrB,GACrCsB,QAsBVzB,eAAiCQ,GAC7B,MAAMkB,EAAU,kCACVC,EAAW,+BACXC,EAAY,gBAEZnB,EAAYD,EAAIE,KAAIV,MAAOuB,IAC7B,MAAMM,EAAS,IAAIC,gBAAgB,CAC/BC,IAAKL,EACLM,EAAGT,EACHU,KAAM,OAGJrB,QAAaC,MAAM,GAAGc,IAAWC,KAAaC,KACpD,IAAKjB,EAAKE,GACN,MAAM,IAAIC,MAAMH,EAAKI,YAEzB,OAAOJ,EAAKK,MAAM,IAGtB,aADmBC,QAAQC,WAAWV,IAC1BW,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IAC9BX,KACG,EACIY,OACIY,UAAUvB,QAAEA,EAAOwB,KAAEA,GACrBC,SAASC,OACLA,EACAC,WAAWC,KAAEA,EAAIC,KAAEA,SAIxB,C,QAAE7B,E,KAASwB,E,OAAME,E,KAAQE,E,KAAMC,K,CApDxBC,CAAkBlC,GAExCrB,EAASK,KAAKmD,WAuDIlC,EAvDqBiB,EAwDhCjB,EACFE,KAAI,EAACC,QAAEA,EAAOwB,KAAEA,EAAIE,OAAEA,EAAME,KAAEA,EAAIC,KAAEA,KAAW,iDAE5BD,WAAcC,8BACpB7B,+BACAwB,8BACDK,0CACaH,0CAGzBM,KAAK,KAXd,IAAsBnC,C","sources":["src/js/lect_11_2.js"],"sourcesContent":["const elements = {\n    form: document.querySelector('.js-search'),\n    formContainer: document.querySelector('.js-form-container'),\n    list: document.querySelector('.js-list'),\n    addField: document.querySelector('.js-add'),\n    removeField: document.querySelector('.js-remove'),\n}\n\nconst f = document.querySelector('.js-add');\n\nelements.addField.addEventListener('click', handlerAddField);\nelements.removeField.addEventListener('click', handlerRemoveField)\n\nfunction handlerAddField() {\n    elements.formContainer.insertAdjacentHTML('beforeend',\n        '<input type=\"text\" name=\"country\" />')\n}\n\nfunction handlerRemoveField() {\n    let { children, lastElementChild } = elements.formContainer;\n    if (children.length === 1) {\n        return\n    }\n    lastElementChild.remove();\n}\n\nelements.form.addEventListener('submit', handlerSearch);\n\nasync function handlerSearch(evt) {\n    evt.preventDefault();\n    const formData = new FormData(evt.currentTarget);\n    const countries = formData.getAll('country')\n    const capitals = await serviceGetCountries(countries);\n    const weather = await serviceGetWeather(capitals)\n\n    elements.list.innerHTML = createMarkup(weather);\n\n}\n\nasync function serviceGetCountries(arr) {\n    const promisses = arr.map(async country => {\n        const resp = await fetch(`https://restcountries.com/v3.1/name/${country}`)\n        if (!resp.ok) {\n            throw new Error(resp.statusText)\n        }\n\n        return resp.json();\n    });\n\n    const data = await Promise.allSettled(promisses)\n    return data\n        .filter(({ status }) => status === \"fulfilled\")\n        .map(({ value }) => value[0].capital[0]);\n}\n\nasync function serviceGetWeather(arr) {\n    const API_KEY = '61069fb8abf74210b7d232148231510'\n    const BASE_URL = 'http://api.weatherapi.com/v1'\n    const END_POINT = \"/current.json\";\n\n    const promisses = arr.map(async (capital) => {\n        const params = new URLSearchParams({\n            key: API_KEY,\n            q: capital,\n            lang: 'uk'\n        })\n \n        const resp = await fetch(`${BASE_URL}${END_POINT}?${params}`)\n        if (!resp.ok) {\n            throw new Error(resp.statusText);\n        }\n        return resp.json();\n    });\n    const data = await Promise.allSettled(promisses);\n    return data.filter(({ status }) => status === 'fulfilled')\n        .map(\n            ({\n                value: {\n                    location: { country, name },\n                    current: {\n                        temp_c,\n                        condition: { icon, text },\n                    }\n                }\n            }) => {\n            return { country, name, temp_c, icon, text };\n        }\n        );\n}\n\nfunction createMarkup(arr) {\n    return arr\n        .map(({ country, name, temp_c, icon, text }) => `\n            <li>\n                <img src='${icon}' alt='${text}' />\n                <h2>${country}</h2>\n                <h2>${name}</h2>\n                <p>${text}</p>\n                <p class=\"temp\">${temp_c} ËšC</p>\n            </li>\n        `)\n        .join(''); \n}\n "],"names":["$8a917f228aee1a5e$var$elements","form","document","querySelector","formContainer","list","addField","removeField","addEventListener","insertAdjacentHTML","children","lastElementChild","length","remove","async","evt","preventDefault","countries","FormData","currentTarget","getAll","capitals","arr","promisses","map","country","resp","fetch","ok","Error","statusText","json","Promise","allSettled","filter","status","value","capital","$8a917f228aee1a5e$var$serviceGetCountries","weather","API_KEY","BASE_URL","END_POINT","params","URLSearchParams","key","q","lang","location","name","current","temp_c","condition","icon","text","$8a917f228aee1a5e$var$serviceGetWeather","innerHTML","join"],"version":3,"file":"lect_1_12.5e90ae26.js.map"}